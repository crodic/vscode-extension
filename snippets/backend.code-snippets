{
    "Model Default Mongoose": {
        "prefix": "!mgdb-model",
        "body": [
            "const bcrypt = require('bcrypt');",
            "const mongoose = require('mongoose');",
            "const Schema = mongoose.Schema;",
            "",
            "const ${1:Schema} = new Schema(",
            "    {",
            "        username: {",
            "            type: String,",
            "        },",
            "        password: {",
            "            type: String,",
            "        },",
            "    },",
            "    {",
            "        timestamps: true,",
            "    }",
            ");",
            "",
            "// Hash Password before save User",
            "${1:Schema}.pre('save', async function (next) {",
            "    if (!this.isModified('password')) return next();",
            "    const salt = bcrypt.genSaltSync(10);",
            "    this.password = await bcrypt.hash(this.password, salt);",
            "});",
            "",
            "const ${3:Model} = mongoose.model('${2:nameSchema}', ${1:Schema});",
            "module.exports = ${3:Model};",
            ""
        ],
        "description": "Model Default Mongoose"
    },
    "Route Default Mongoose": {
        "prefix": "!expr-route",
        "body": [
            "const express = require('express');",
            "const ${1:router} = express.Router();",
            "",
            "",
            "",
            "module.exports = ${1:router};"
        ],
        "description": "Route Default Mongoose"
    },
    "Connection MongoDB": {
        "prefix": "!mgdb-conn",
        "body": [
            "const mongoose = require('mongoose');",
            "",
            "const MONGODB_URI = ${1:uri};",
            "",
            "const Connection = async () => {",
            "    try {",
            "        await mongoose.connect(MONGODB_URI);",
            "        console.log('Connection successfully !!!');",
            "    } catch (error) {",
            "        console.log('Connection Fail with error: ', error.message);",
            "    }",
            "};",
            "",
            "module.exports = Connection;",
            ""
        ],
        "description": "Connection MongoDB"
    },
    "Config Server And Cookies In NodeJS": {
        "prefix": "!cors",
        "body": [
            "app.use(",
            "    cors({",
            "        origin: '*',",
            "        credentials: true,",
            "    })",
            ");",
            "app.use(cookiesParser());",
            "app.use(express.urlencoded({ extended: true }));",
            "app.use(express.json());",
            "app.use(morgan('common'));"
        ],
        "description": "Config Server And Cookies In NodeJS"
    }
}
